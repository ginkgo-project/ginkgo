name: Windows-MinGW

on:
  push:
    branches:
      - 'master'
      - 'develop'
      - 'release/**'
    tags:
      - '**'
  pull_request:
    types: [opened,synchronize]
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled by `debug_enabled` keyword (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ (github.head_ref && github.ref) || github.run_id }}
  cancel-in-progress: true

jobs:
  windows_mingw:
    if: ${{ false }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { preset: "ci-omp-mingwgcc-nompi-release-static" }
    name: ${{ matrix.config.preset }}
    runs-on: [windows-latest]
    steps:
    - name: Checkout the latest code (shallow clone)
      uses: actions/checkout@v4

    - name: Debug over SSH (tmate)
      uses: mxschmitt/action-tmate@v3.5
      if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
      with:
        limit-access-to-actor: true

    - name: configure
    # Use cmd to remove the path easily
      run: |
        bcdedit /set IncreaseUserVa 3072
        editbin /LARGEADDRESSAWARE "C:\Program Files\Git\mingw64\bin\cc1plus.exe"
        set PATH=C:\Program Files\Git\mingw64\bin;%PATH%
        set PATH=C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin;%PATH%
        mkdir build
        cd build
        cmake -S .. -B . --preset ${{ matrix.config.preset }}
        cmake --build . -j4
      shell: cmd

    - name: install
      run: |
        set PATH=C:\Program Files\Git\mingw64\bin;%PATH%
        set PATH=C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin;%PATH%
        set PATH=C:\Program Files (x86)\Ginkgo\bin;%PATH%
        cd build
        cmake --install .
        cmake --build . --target test_install
      shell: cmd
