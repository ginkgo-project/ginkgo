name: Windows-MSVC-Reference

on:
  push:
    branches:
      - 'master'
      - 'develop'
      - 'release/**'
    tags:
      - '**'
  pull_request:
    types: [opened,synchronize]
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled by `debug_enabled` keyword (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false

concurrency:
  group: ${{ github.workflow }}-${{ (github.head_ref && github.ref) || github.run_id }}
  cancel-in-progress: true

jobs:
  windows_ref:
    strategy:
      fail-fast: false
      matrix:
        config:
        # Debug with half precision has the issue "library limit of 65535 objects exceeded"
        - {shared: "ON", build_type: "Debug", name: "reference/debug/shared", half: "OFF"}
        - {shared: "OFF", build_type: "Release", name: "reference/release/static", half: "ON"}
        # Debug static needs too much storage
        # - {shared: "OFF", build_type: "Debug", name: "reference/debug/static"}
    name: msvc/${{ matrix.config.name }}
    runs-on: [windows-latest]
    steps:
    - name: Checkout the latest code (shallow clone)
      uses: actions/checkout@v3

    - name: Debug over SSH (tmate)
      uses: mxschmitt/action-tmate@v3.5
      if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
      with:
        limit-access-to-actor: true

    - name: configure
      run: |
        mkdir build
        cd build
        cmake  -DBUILD_SHARED_LIBS=${{ matrix.config.shared }} -DCMAKE_CXX_FLAGS_DEBUG='/MDd /Zi /Ob1 /O1 /Od /RTC1' -DGINKGO_BUILD_CUDA=OFF -DGINKGO_BUILD_OMP=OFF -DGINKGO_ENABLE_HALF=${{ matrix.config.half }}..
        cmake --build . -j4 --config ${{ matrix.config.build_type }}
        ctest . -C ${{ matrix.config.build_type }} --output-on-failure

    - name: install
      run: |
        $env:PATH="$env:PATH;C:\Program Files (x86)\Ginkgo\bin"
        cd build
        cmake --install . --config ${{ matrix.config.build_type }}
        cmake --build . --target test_install --config ${{ matrix.config.build_type }}
