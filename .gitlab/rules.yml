# The way rules work are explained in https://docs.gitlab.com/ee/ci/yaml/#rules
# As a summary: Rules are evaluated when the pipeline is created, and evaluated
# in order until the first match. When a match is found, the job is either
# included or excluded from the pipeline, depending on the configuration.

.changes_other_than_doc: &changes_other_than_doc
# there is no check for the change out of the condition, so we need to reverse the file changes by ourselves
# We always compare it against the develop because the 
  changes: 
    paths:
      - '{[^d][^o][^c],[^d][^o]c,[^d]oc}/**/*'
    compared_to:
      - develop


.pr_trigger_condition:
  rules:
    # Exclude `develop`, `master`, and tags with `when: never`
    - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_TAG
      when: never
    # Run only for quick pipelines and when the `RUN_CI_TAG` variable is set
    - if: $RUN_CI_TAG && $STATUS_CONTEXT == "quick"
      <<: *changes_other_than_doc
  dependencies: []


.full_test_condition:
  rules:
    # Run only when the `RUN_CI_TAG` variable is set and this is for `master`, `develop` or tags.
    - if: $RUN_CI_TAG && ($CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_TAG)
    - if: $RUN_CI_TAG && $STATUS_CONTEXT == "full"
      <<: *changes_other_than_doc
  dependencies: []


.full_test_short_lived_condition:
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "master"  || $CI_COMMIT_TAG
      when: never
    - if: $RUN_CI_TAG && $STATUS_CONTEXT == "full"
      <<: *changes_other_than_doc
  dependencies: []


.quick_test_condition:
  rules:
    - if: $RUN_CI_TAG && $CI_COMMIT_BRANCH == "master"
      when: never
    - if: $RUN_CI_TAG && ($CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_TAG)
    - if: $RUN_CI_TAG && $STATUS_CONTEXT == null
      <<: *changes_other_than_doc
  dependencies: []


.deploy_condition:
  rules:
    - if: $RUN_CI_TAG && ($CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_TAG) && $CI_PIPELINE_SOURCE != "schedule"
  dependencies: []


.benchmark-spmv-cuda-rules:
  rules:
    # First, check that we have any of the following file changes
    - if: $RUN_CI_TAG && $STATUS_CONTEXT == "full" && $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "external_pull_request_event"
      changes:
        - cuda/matrix/*
        - include/ginkgo/core/matrix/*
        - common/cuda_hip/matrix/*
        # - common/unified/matrix/* # for now no SpMV there?
      when: manual
      allow_failure: true


.disable_job_condition:
  rules:
    - when: never
