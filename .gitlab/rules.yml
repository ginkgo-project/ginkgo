# The way rules work are explained in https://docs.gitlab.com/ee/ci/yaml/#rules
# As a summary: Rules are evaluated when the pipeline is created, and evaluated
# in order until the first match. When a match is found, the job is either
# included or excluded from the pipeline, depending on the configuration.

.pr_condition:
  rules:
    # Exclude `develop`, `master`, and tags with `when: never`
    - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_TAG
      when: never
    # Run only when the `RUN_CI_TAG` variable is set
    - if: $RUN_CI_TAG
  dependencies: []


.pr_trigger_condition:
  rules:
    # Exclude `develop`, `master`, and tags with `when: never`
    - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_TAG
      when: never
    # Run only for quick pipelines and when the `RUN_CI_TAG` variable is set
    - if: $RUN_CI_TAG && $STATUS_CONTEXT == "quick"
  dependencies: []


.full_test_condition:
  rules:
    # Run only when the `RUN_CI_TAG` variable is set and this is a full pipeline, or for `master`, `develop` or tags.
    - if: $RUN_CI_TAG && ($STATUS_CONTEXT == "full" || $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_TAG)
  dependencies: []


.quick_test_condition:
  rules:
    - if: $RUN_CI_TAG && $STATUS_CONTEXT == null
  dependencies: []

.quick_test_short_lived_condition:
  rules:
    - if: $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_BRANCH == "master" || $CI_COMMIT_TAG
      when: never
    - if: $RUN_CI_TAG && $STATUS_CONTEXT == null
  dependencies: []

.deploy_condition:
  rules:
    - if: $RUN_CI_TAG && ($CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop" || $CI_COMMIT_TAG) && $CI_PIPELINE_SOURCE != "schedule"
  dependencies: []


.benchmark-spmv-cuda-rules:
  rules:
    # First, check that we have any of the following file changes
    - if: $RUN_CI_TAG && $STATUS_CONTEXT == "full" && $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "external_pull_request_event"
      changes:
        - cuda/matrix/*
        - include/ginkgo/core/matrix/*
        - common/cuda_hip/matrix/*
        # - common/unified/matrix/* # for now no SpMV there?
      when: manual
      allow_failure: true
