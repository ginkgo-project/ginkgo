stages:
  - init-status
  - sync
  - trigger_pipeline
  - build
  - test
  - code_quality
  - deploy
  - QoS_tools
  - on-failure
  - finalize-status
  - benchmark-build
  - benchmark-cuda
  - benchmark-omp
  - benchmark-reference

include:
  - local: '.gitlab/image.yml'
  - local: '.gitlab/rules.yml'
  - local: '.gitlab/scripts.yml'
  - local: '.gitlab/variables.yml'


build/windows/release/shared:
  stage: build
  script:
    - Import-Module "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\Common7\Tools\Microsoft.VisualStudio.DevShell.dll"
    - Enter-VsDevShell -VsInstallPath "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools" -DevCmdArguments '-arch=x64'
    - mkdir build
    - mkdir install
    - cmake -GNinja -B build -DBUILD_SHARED_LIBS=ON -DGINKGO_BUILD_CUDA=OFF "-DCMAKE_INSTALL_PREFIX=$pwd\install" .
    - cmake --build build --config Release -j16
    - ctest --test-dir build -C Release --no-tests=error --output-on-failure -j16
    - $env:PATH+=";$pwd/install/bin"
    - cmake --install build --config Release
    - cmake --build build --target test_install --config Release
  tags:
    - windows


build/windows-cuda/release/shared:
  stage: build
  script:
    - Import-Module "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools\Common7\Tools\Microsoft.VisualStudio.DevShell.dll"
    - Enter-VsDevShell -VsInstallPath "C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools" -DevCmdArguments '-arch=x64'
    - mkdir build
    - mkdir install
    - cmake -GNinja -B build -DBUILD_SHARED_LIBS=ON -DGINKGO_BUILD_CUDA=ON "-DCMAKE_INSTALL_PREFIX=$pwd\install" .
    - cmake --build build --config Release -j16
    - ctest --test-dir build -C Release --no-tests=error --output-on-failure
    - $env:PATH+=";$pwd/install/bin"
    - cmake --install build --config Release
    - cmake --build build --target test_install --config Release
  tags:
    - windows
