FROM nvidia/cuda:9.1-devel-ubuntu16.04 AS stage0

ENV CUDA_INSTALL_PATH=/usr/local/cuda/

ENV CUDA_PATH=/usr/local/cuda/

ENV CUDA_ROOT=/usr/local/cuda/

ENV CUDA_SDK=/usr/local/cuda/

ENV CUDA_INC_PATH=/usr/local/cuda/include

ENV PATH=$PATH:/usr/local/cuda/bin

ENV LIBRARY_PATH=$LIBRARY_PATH:/usr/local/cuda/lib64/stubs

ENV LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64/stubs

ENV LD_RUN_PATH=usr/local/cuda/lib64/stubs

ENV INCLUDEPATH=/usr/local/cuda/include

ENV CPATH=/usr/local/cuda/include

ENV MANPATH=/usr/local/cuda/doc/man

# Python
RUN apt-get update -y && \
    apt-get install -y --no-install-recommends \
        python \
        python3 && \
    rm -rf /var/lib/apt/lists/*

# CMake version 3.11.1
RUN apt-get update -y && \
    apt-get install -y --no-install-recommends \
        wget && \
    rm -rf /var/lib/apt/lists/*
RUN mkdir -p /var/tmp && wget -q -nc --no-check-certificate -P /var/tmp https://cmake.org/files/v3.11/cmake-3.11.1-Linux-x86_64.sh && \
    /bin/sh /var/tmp/cmake-3.11.1-Linux-x86_64.sh --prefix=/usr/local --skip-license && \
    rm -rf /var/tmp/cmake-3.11.1-Linux-x86_64.sh

RUN apt-get update -y && \
    apt-get install -y --no-install-recommends \
        git \
        openssh-client \
        doxygen \
        curl \
        valgrind \
        graphviz && \
    rm -rf /var/lib/apt/lists/*

RUN apt-get update -y && \
    apt-get install -y --no-install-recommends \
        jq \
        iwyu && \
    rm -rf /var/lib/apt/lists/*

RUN apt-get update -y && \
    apt-get install -y --no-install-recommends \
        build-essential \
        automake \
        pkg-config \
        libtool && \
    rm -rf /var/lib/apt/lists/*

# GNU compiler
RUN apt-get update -y && \
    apt-get install -y --no-install-recommends software-properties-common && \
    apt-add-repository ppa:ubuntu-toolchain-r/test -y && \
    apt-get update -y && \
    apt-get install -y --no-install-recommends \
        gcc-6 \
        g++-6 \
        gfortran-6 && \
    rm -rf /var/lib/apt/lists/*
RUN update-alternatives --install /usr/bin/gcc gcc $(which gcc-6) 30 && \
    update-alternatives --install /usr/bin/g++ g++ $(which g++-6) 30 && \
    update-alternatives --install /usr/bin/gfortran gfortran $(which gfortran-6) 30

# LLVM compiler
RUN apt-get update -y && \
    apt-get install -y --no-install-recommends \
        clang-4.0 && \
    rm -rf /var/lib/apt/lists/*
RUN update-alternatives --install /usr/bin/clang clang $(which clang-4.0) 30 && \
    update-alternatives --install /usr/bin/clang++ clang++ $(which clang++-4.0) 30

RUN apt-get update -y && \
    apt-get install -y --no-install-recommends \
        libomp-dev && \
    rm -rf /var/lib/apt/lists/*

RUN apt-get update -y && \
    apt-get install -y --no-install-recommends software-properties-common && \
    apt-add-repository ppa:xorg-edgers/ppa -y && \
    apt-get update -y && \
    apt-get install -y --no-install-recommends \
        clang-tidy-4.0 && \
    rm -rf /var/lib/apt/lists/*

RUN ln -s /usr/bin/clang-tidy-4.0 /usr/bin/clang-tidy

COPY bin/* /usr/bin/

COPY sonar-scanner/ /


