cmake_minimum_required(VERSION 3.21)
project(kokkos-assembly CXX)

# We only need to find Ginkgo if we build this example stand-alone
if (NOT GINKGO_BUILD_EXAMPLES)
    find_package(Ginkgo 1.7.0 REQUIRED)
endif ()

find_package(Kokkos REQUIRED)

message(STATUS "Kokkos_ENABLE_HIP: ${Kokkos_ENABLE_HIP}")

macro(ginkgo_enable_kokkos_language)
    set(__device_enabled OFF)
    if (Kokkos_ENABLE_CUDA)
        enable_language(CUDA)
        set(__device_enabled ON)
    endif ()
    if (Kokkos_ENABLE_HIP)
        if (__device_enabled)
            message(FATAL_ERROR "Could not enable HIP language because CUDA language is already enabled.")
        endif ()
        enable_language(HIP)
        set(__device_enabled ON)
    endif ()
endmacro()

ginkgo_enable_kokkos_language()

function(ginkgo_add_kokkos_executable target sources)
    find_package(Kokkos REQUIRED)
    add_executable(${target} ${sources})
    target_link_libraries(${target} PRIVATE Ginkgo::ginkgo Kokkos::kokkos)
    set_target_properties(${target} PROPERTIES CXX_COMPILER_LAUNCHER "")
    if (Kokkos_ENABLE_HIP)
        find_package(hip REQUIRED)
        target_link_libraries(${target} PRIVATE hip::device)
        target_compile_options(${target} PRIVATE "--offload-arch=gfx908")
        set_source_files_properties(${sources} PROPERTIES LANGUAGE HIP)
    endif ()
    if (Kokkos_ENABLE_CUDA)
        set_target_properties(${target} PROPERTIES CUDA_ARCHITECTURES "native")
    endif ()
    if (Kokkos_ENABLE_SYCL)
        find_package(hip REQUIRED)
        target_link_libraries(${target} PRIVATE hip::device)
        target_compile_options(${target} PRIVATE "--offload-arch=gfx908")
        set_source_files_properties(${sources} PROPERTIES LANGUAGE HIP)
    endif ()
    if (Kokkos_ENABLE_OPENMP)
        find_package(OpenMP REQUIRED)
        target_link_libraries(${target} PRIVATE OpenMP::OpenMP_CXX)
    endif ()
endfunction()


ginkgo_add_kokkos_executable(kokkos-assembly1 kokkos_assembly1.cpp)
ginkgo_add_kokkos_executable(kokkos-assembly2 kokkos_assembly2.cpp)
